@inject NavigationManager NavigationManager
@inject IEmployeeMasterService EmployeeMasterService


<div class="input-group">
    <input @bind-value="searchText"
   
    @bind-value:event="oninput"
           type="search"
           list="employees"
    @onkeyup="HandleSearch"
           class="form-control"
           placeholder="User Name"
           style="border-radius:20px; border: 1px solid#2b3990;"
    @ref="searchInput" />

    <datalist id="employees">
        @foreach (var suggestion in suggestions)
        {
            <option>@suggestion</option>
        }
    </datalist>
    @* <div class="input-group-append">
        <button class="btn btn-primary" @onclick="SearchEmployees">
            <span class="oi oi-magnifying-glass"></span>
        </button>
    </div> *@
</div>

@code {




    private string searchText = string.Empty;
    private List<string> suggestions = new List<string>();
    protected ElementReference searchInput;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await searchInput.FocusAsync();
            
        }
    }
    public void SearchEmployees()
    {
       NavigationManager.NavigateTo($"search/{searchText}");
    }
    public async Task HandleSearch(KeyboardEventArgs args)
    {
        if (args.Key == null || args.Key.Equals("Enter"))
        {
            SearchEmployees();
        }
        else if (searchText.Length > 1)
        {
            suggestions = await EmployeeMasterService.GetUserSearchSuggestions(searchText);
        }
    }
}
